import 'DataElement', './data_element.js'

export default class ElmTopProjects < DataElement
  def initialize
    super

    init_elm()
  end

  def connectedCallback()

  end

  def disconnectedCallback()

  end

  def init_elm()
    l_projects = lambda do
      result = ""

      (0...@data.length).step(1) do |i| project = @data[i]
        md_img = project[:content].split(' ')[0]
        src_img = md_img.replace(')', '').split('(')[1]

        unless src_img
          src_img = ""
        end

        content = project[:content]
        content = project[:content].replace(md_img, '').trim() if src_img

        template = """
        <div class='col-lg-4 text-center'>
          <img src='#{src_img}' class='bd-placeholder-img rounded-circle' width='140' height='140' />
          <h2 class='fw-normal'>#{project[:name]}</h2>
          <p>#{content}</p>
          <p><a class='btn btn-secondary' href='/projects/#{project[:name].url_form()}'>See details</a></p>
        </div>
        """
        result += template
      end
      return result
    end

    template = """
    <div class='row justify-content-center'>
      #{l_projects.call()}
    </div>
    """

    self.innerHTML = template
  end
end
